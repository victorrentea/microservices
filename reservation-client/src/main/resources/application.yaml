spring.application.name: reservation-client

server.port: 8080
spring.cloud.stream.bindings:
  createReservation.destination: reservations




resilience4j:
  bulkhead:
    instances:
      fragile:
        max-concurrent-calls: 2
        max-wait-duration: 500ms
  circuitbreaker:
    instances:
      get-reservations:
        register-health-indicator: true
        failure-rate-threshold: 50
        # 50% slow ones
        slow-call-duration-threshold: 1s
        slow-call-rate-threshold: 50
        #seconds or count
        sliding-window-type: count_based
        sliding-window-size: 20
        #back CLOSED
        wait-duration-in-open-state: 3s
  retry:
    instances:
      flaky:
        wait-duration: 100ms
        max-attempts: 3
      flaky-slow:
        max-attempts: 3
        retry-exceptions:
          - feign.RetryableException
#          - org.springframework.web.client.ResourceAccessException
  ratelimiter:
    instances:
      rate-limited:
         limit-refresh-period: 1m
         limit-for-period: 10
         register-health-indicator: true
         timeout-duration: 2s



eureka:
  client:
    registry-fetch-interval-seconds: 2
logging:
  level:
    com.netflix.discovery: WARN

spring:
  cloud:
    openfeign:
      client:
        config:
          reservation-service:
            url: "http://localhost:8081"
            connect-timeout: 2_000
            read-timeout: 2_000


# ~~~~ Actuator ~~~~
management.endpoints.web.exposure.include: "*"
management.endpoint.prometheus.enabled: true