spring.application.name: reservation-client
.com.netflix.discovery: WARN
server.port: 8080
spring.cloud.stream.bindings:
  createReservation.destination: reservations

resilience4j:
  bulkhead:
    instances:
      fragile:
        max-concurrent-calls: 2
        max-wait-duration: 10s
  circuitbreaker:
    instances:
      get-reservations:
        register-health-indicator: true
        # 50% slow ones
#        slow-call-duration-threshold: 1s
#        slow-call-rate-threshold: 50
        # during last [seconds or count] ...
        sliding-window-type: count_based
        sliding-window-size: 20
        # OPEN if:
        failure-rate-threshold: 50
        # and try to CLOSE it back after ...
        wait-duration-in-open-state: 3s
  retry:
    instances:
      flaky:
        wait-duration: 50
        max-attempts: 3
        exponential-backoff-multiplier: 1.3
      flaky-slow:
        retry-exceptions:
          - org.springframework.web.client.ResourceAccessException

  ratelimiter:
    instances:
      rate-limited:
         register-health-indicator: true
         timeout-duration: 2s
         limit-refresh-period: 1m
         limit-for-period: 10



eureka:
  client:
    registry-fetch-interval-seconds: 2
logging:
  level:
    com.netflix.discovery: WARN
